const db = firebase.firestore()
const storageRef = firebase.storage().ref()
function uuidv4() {
  /*https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript */
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
    return v.toString(16);
  });
}
class Random {
  /* https://sbfl.net/blog/2017/06/01/javascript-reproducible-random/ */
  constructor(seed = 88675123) {
    this.x = 123456789;
    this.y = 362436069;
    this.z = 521288629;
    this.w = seed;
  }
  // XorShift
  next() {
    let t;
    t = this.x ^ (this.x << 11);
    this.x = this.y; this.y = this.z; this.z = this.w;
    return this.w = (this.w ^ (this.w >>> 19)) ^ (t ^ (t >>> 8));
  }
  // min以上max以下の乱数を生成する
  nextInt(min, max) {
    const r = Math.abs(this.next());
    return min + (r % (max + 1 - min));
  }
}
const NAME_COLOR_LIST = ['#0000FF', '#000080', '#008080', '#008000', '#00FF00', '#00FFFF', '#FF0000', '#FF00FF', '#808000', '#800080', '#800000']
// https://unicode.org/emoji/charts/full-emoji-list.html
const EMOJI_LIST = ['😀', '😃', '😄', '😁', '😆', '😅', '🤣', '😂', '🙂', '🙃', '😉', '😊', '😇', '🥰', '😍', '🤩', '😘', '😗', '☺', '😚', '😙', '😋', '😛', '😜', '🤪', '😝', '🤑', '🤗', '🤭', '🤫', '🤔', '🤐', '🤨', '😐', '😑', '😶', '😏', '😒', '🙄', '😬', '🤥', '😌', '😔', '😪', '🤤', '😴', '😷', '🤒', '🤕', '🤢', '🤮', '🤧', '🥵', '🥶', '🥴', '😵', '🤯', '🤠', '🥳', '😎', '🤓', '🧐', '😕', '😟', '🙁', '☹', '😮', '😯', '😲', '😳', '🥺', '😦', '😧', '😨', '😰', '😥', '😢', '😭', '😱', '😖', '😣', '😞', '😓', '😩', '😫', '🥱', '😤', '😡', '😠', '🤬', '😈', '👿', '💀', '☠', '💩', '🤡', '👹', '👺', '👻', '👽', '👾', '🤖', '😺', '😸', '😹', '😻', '😼', '😽', '🙀', '😿', '😾', '🙈', '🙉', '🙊', '💋', '💌', '💘', '💝', '💖', '💗', '💓', '💞', '💕', '💟', '❣', '💔', '❤', '🧡', '💛', '💚', '💙', '💜', '🤎', '🖤', '🤍', '💯', '💢', '💥', '💫', '💦', '💨', '🕳', '💣', '💬', '👁️‍🗨️', '🗨', '🗯', '💭', '💤', '👋', '🤚', '🖐', '✋', '🖖', '👌', '🤏', '✌', '🤞', '🤟', '🤘', '🤙', '👈', '👉', '👆', '🖕', '👇', '☝', '👍', '👎', '✊', '👊', '🤛', '🤜', '👏', '🙌', '👐', '🤲', '🤝', '🙏', '✍', '💅', '🤳', '💪', '🦾', '🦿', '🦵', '🦶', '👂', '🦻', '👃', '🧠', '🦷', '🦴', '👀', '👁', '👅', '👄', '👶', '🧒', '👦', '👧', '🧑', '👱', '👨', '🧔', '👱‍♂️', '👨‍🦰', '👨‍🦱', '👨‍🦳', '👨‍🦲', '👩', '👱‍♀️', '👩‍🦰', '👩‍🦱', '👩‍🦳', '👩‍🦲', '🧓', '👴', '👵', '🙍', '🙍‍♂️', '🙍‍♀️', '🙎', '🙎‍♂️', '🙎‍♀️', '🙅', '🙅‍♂️', '🙅‍♀️', '🙆', '🙆‍♂️', '🙆‍♀️', '💁', '💁‍♂️', '💁‍♀️', '🙋', '🙋‍♂️', '🙋‍♀️', '🧏', '🧏‍♂️', '🧏‍♀️', '🙇', '🙇‍♂️', '🙇‍♀️', '🤦', '🤦‍♂️', '🤦‍♀️', '🤷', '🤷‍♂️', '🤷‍♀️', '👨‍⚕️', '👩‍⚕️', '👨‍🎓', '👩‍🎓', '👨‍🏫', '👩‍🏫', '👨‍⚖️', '👩‍⚖️', '👨‍🌾', '👩‍🌾', '👨‍🍳', '👩‍🍳', '👨‍🔧', '👩‍🔧', '👨‍🏭', '👩‍🏭', '👨‍💼', '👩‍💼', '👨‍🔬', '👩‍🔬', '👨‍💻', '👩‍💻', '👨‍🎤', '👩‍🎤', '👨‍🎨', '👩‍🎨', '👨‍✈️', '👩‍✈️', '👨‍🚀', '👩‍🚀', '👨‍🚒', '👩‍🚒', '👮', '👮‍♂️', '👮‍♀️', '🕵', '🕵️‍♂️', '🕵️‍♀️', '💂', '💂‍♂️', '💂‍♀️', '👷', '👷‍♂️', '👷‍♀️', '🤴', '👸', '👳', '👳‍♂️', '👳‍♀️', '👲', '🧕', '🤵', '👰', '🤰', '🤱', '👼', '🎅', '🤶', '🦸', '🦸‍♂️', '🦸‍♀️', '🦹', '🦹‍♂️', '🦹‍♀️', '🧙', '🧙‍♂️', '🧙‍♀️', '🧚', '🧚‍♂️', '🧚‍♀️', '🧛', '🧛‍♂️', '🧛‍♀️', '🧜', '🧜‍♂️', '🧜‍♀️', '🧝', '🧝‍♂️', '🧝‍♀️', '🧞', '🧞‍♂️', '🧞‍♀️', '🧟', '🧟‍♂️', '🧟‍♀️', '💆', '💆‍♂️', '💆‍♀️', '💇', '💇‍♂️', '💇‍♀️', '🚶', '🚶‍♂️', '🚶‍♀️', '🧍', '🧍‍♂️', '🧍‍♀️', '🧎', '🧎‍♂️', '🧎‍♀️', '👨‍🦯', '👩‍🦯', '👨‍🦼', '👩‍🦼', '👨‍🦽', '👩‍🦽', '🏃', '🏃‍♂️', '🏃‍♀️', '💃', '🕺', '🕴', '👯', '👯‍♂️', '👯‍♀️', '🧖', '🧖‍♂️', '🧖‍♀️', '🧗', '🧗‍♂️', '🧗‍♀️', '🤺', '🏇', '⛷', '🏂', '🏌', '🏌️‍♂️', '🏌️‍♀️', '🏄', '🏄‍♂️', '🏄‍♀️', '🚣', '🚣‍♂️', '🚣‍♀️', '🏊', '🏊‍♂️', '🏊‍♀️', '⛹', '⛹️‍♂️', '⛹️‍♀️', '🏋', '🏋️‍♂️', '🏋️‍♀️', '🚴', '🚴‍♂️', '🚴‍♀️', '🚵', '🚵‍♂️', '🚵‍♀️', '🤸', '🤸‍♂️', '🤸‍♀️', '🤼', '🤼‍♂️', '🤼‍♀️', '🤽', '🤽‍♂️', '🤽‍♀️', '🤾', '🤾‍♂️', '🤾‍♀️', '🤹', '🤹‍♂️', '🤹‍♀️', '🧘', '🧘‍♂️', '🧘‍♀️', '🛀', '🛌', '🧑‍🤝‍🧑', '👭', '👫', '👬', '💏', '👩‍❤️‍💋‍👨', '👨‍❤️‍💋‍👨', '👩‍❤️‍💋‍👩', '💑', '👩‍❤️‍👨', '👨‍❤️‍👨', '👩‍❤️‍👩', '👪', '👨‍👩‍👦', '👨‍👩‍👧', '👨‍👩‍👧‍👦', '👨‍👩‍👦‍👦', '👨‍👩‍👧‍👧', '👨‍👨‍👦', '👨‍👨‍👧', '👨‍👨‍👧‍👦', '👨‍👨‍👦‍👦', '👨‍👨‍👧‍👧', '👩‍👩‍👦', '👩‍👩‍👧', '👩‍👩‍👧‍👦', '👩‍👩‍👦‍👦', '👩‍👩‍👧‍👧', '👨‍👦', '👨‍👦‍👦', '👨‍👧', '👨‍👧‍👦', '👨‍👧‍👧', '👩‍👦', '👩‍👦‍👦', '👩‍👧', '👩‍👧‍👦', '👩‍👧‍👧', '🗣', '👤', '👥', '👣', '🦰', '🦱', '🦳', '🦲', '🐵', '🐒', '🦍', '🦧', '🐶', '🐕', '🦮', '🐕‍🦺', '🐩', '🐺', '🦊', '🦝', '🐱', '🐈', '🦁', '🐯', '🐅', '🐆', '🐴', '🐎', '🦄', '🦓', '🦌', '🐮', '🐂', '🐃', '🐄', '🐷', '🐖', '🐗', '🐽', '🐏', '🐑', '🐐', '🐪', '🐫', '🦙', '🦒', '🐘', '🦏', '🦛', '🐭', '🐁', '🐀', '🐹', '🐰', '🐇', '🐿', '🦔', '🦇', '🐻', '🐨', '🐼', '🦥', '🦦', '🦨', '🦘', '🦡', '🐾', '🦃', '🐔', '🐓', '🐣', '🐤', '🐥', '🐦', '🐧', '🕊', '🦅', '🦆', '🦢', '🦉', '🦩', '🦚', '🦜', '🐸', '🐊', '🐢', '🦎', '🐍', '🐲', '🐉', '🦕', '🦖', '🐳', '🐋', '🐬', '🐟', '🐠', '🐡', '🦈', '🐙', '🐚', '🐌', '🦋', '🐛', '🐜', '🐝', '🐞', '🦗', '🕷', '🕸', '🦂', '🦟', '🦠', '💐', '🌸', '💮', '🏵', '🌹', '🥀', '🌺', '🌻', '🌼', '🌷', '🌱', '🌲', '🌳', '🌴', '🌵', '🌾', '🌿', '☘', '🍀', '🍁', '🍂', '🍃', '🍇', '🍈', '🍉', '🍊', '🍋', '🍌', '🍍', '🥭', '🍎', '🍏', '🍐', '🍑', '🍒', '🍓', '🥝', '🍅', '🥥', '🥑', '🍆', '🥔', '🥕', '🌽', '🌶', '🥒', '🥬', '🥦', '🧄', '🧅', '🍄', '🥜', '🌰', '🍞', '🥐', '🥖', '🥨', '🥯', '🥞', '🧇', '🧀', '🍖', '🍗', '🥩', '🥓', '🍔', '🍟', '🍕', '🌭', '🥪', '🌮', '🌯', '🥙', '🧆', '🥚', '🍳', '🥘', '🍲', '🥣', '🥗', '🍿', '🧈', '🧂', '🥫', '🍱', '🍘', '🍙', '🍚', '🍛', '🍜', '🍝', '🍠', '🍢', '🍣', '🍤', '🍥', '🥮', '🍡', '🥟', '🥠', '🥡', '🦀', '🦞', '🦐', '🦑', '🦪', '🍦', '🍧', '🍨', '🍩', '🍪', '🎂', '🍰', '🧁', '🥧', '🍫', '🍬', '🍭', '🍮', '🍯', '🍼', '🥛', '☕', '🍵', '🍶', '🍾', '🍷', '🍸', '🍹', '🍺', '🍻', '🥂', '🥃', '🥤', '🧃', '🧉', '🧊', '🥢', '🍽', '🍴', '🥄', '🔪', '🏺', '🌍', '🌎', '🌏', '🌐', '🗺', '🗾', '🧭', '🏔', '⛰', '🌋', '🗻', '🏕', '🏖', '🏜', '🏝', '🏞', '🏟', '🏛', '🏗', '🧱', '🏘', '🏚', '🏠', '🏡', '🏢', '🏣', '🏤', '🏥', '🏦', '🏨', '🏩', '🏪', '🏫', '🏬', '🏭', '🏯', '🏰', '💒', '🗼', '🗽', '⛪', '🕌', '🛕', '🕍', '⛩', '🕋', '⛲', '⛺', '🌁', '🌃', '🏙', '🌄', '🌅', '🌆', '🌇', '🌉', '♨', '🎠', '🎡', '🎢', '💈', '🎪', '🚂', '🚃', '🚄', '🚅', '🚆', '🚇', '🚈', '🚉', '🚊', '🚝', '🚞', '🚋', '🚌', '🚍', '🚎', '🚐', '🚑', '🚒', '🚓', '🚔', '🚕', '🚖', '🚗', '🚘', '🚙', '🚚', '🚛', '🚜', '🏎', '🏍', '🛵', '🦽', '🦼', '🛺', '🚲', '🛴', '🛹', '🚏', '🛣', '🛤', '🛢', '⛽', '🚨', '🚥', '🚦', '🛑', '🚧', '⚓', '⛵', '🛶', '🚤', '🛳', '⛴', '🛥', '🚢', '✈', '🛩', '🛫', '🛬', '🪂', '💺', '🚁', '🚟', '🚠', '🚡', '🛰', '🚀', '🛸', '🛎', '🧳', '⌛', '⏳', '⌚', '⏰', '⏱', '⏲', '🕰', '🕛', '🕧', '🕐', '🕜', '🕑', '🕝', '🕒', '🕞', '🕓', '🕟', '🕔', '🕠', '🕕', '🕡', '🕖', '🕢', '🕗', '🕣', '🕘', '🕤', '🕙', '🕥', '🕚', '🕦', '🌑', '🌒', '🌓', '🌔', '🌕', '🌖', '🌗', '🌘', '🌙', '🌚', '🌛', '🌜', '🌡', '☀', '🌝', '🌞', '🪐', '⭐', '🌟', '🌠', '🌌', '☁', '⛅', '⛈', '🌤', '🌥', '🌦', '🌧', '🌨', '🌩', '🌪', '🌫', '🌬', '🌀', '🌈', '🌂', '☂', '☔', '⛱', '⚡', '❄', '☃', '⛄', '☄', '🔥', '💧', '🌊', '🎃', '🎄', '🎆', '🎇', '🧨', '✨', '🎈', '🎉', '🎊', '🎋', '🎍', '🎎', '🎏', '🎐', '🎑', '🧧', '🎀', '🎁', '🎗', '🎟', '🎫', '🎖', '🏆', '🏅', '🥇', '🥈', '🥉', '⚽', '⚾', '🥎', '🏀', '🏐', '🏈', '🏉', '🎾', '🥏', '🎳', '🏏', '🏑', '🏒', '🥍', '🏓', '🏸', '🥊', '🥋', '🥅', '⛳', '⛸', '🎣', '🤿', '🎽', '🎿', '🛷', '🥌', '🎯', '🪀', '🪁', '🎱', '🔮', '🧿', '🎮', '🕹', '🎰', '🎲', '🧩', '🧸', '♠', '♥', '♦', '♣', '♟', '🃏', '🀄', '🎴', '🎭', '🖼', '🎨', '🧵', '🧶', '👓', '🕶', '🥽', '🥼', '🦺', '👔', '👕', '👖', '🧣', '🧤', '🧥', '🧦', '👗', '👘', '🥻', '🩱', '🩲', '🩳', '👙', '👚', '👛', '👜', '👝', '🛍', '🎒', '👞', '👟', '🥾', '🥿', '👠', '👡', '🩰', '👢', '👑', '👒', '🎩', '🎓', '🧢', '⛑', '📿', '💄', '💍', '💎', '🔇', '🔈', '🔉', '🔊', '📢', '📣', '📯', '🔔', '🔕', '🎼', '🎵', '🎶', '🎙', '🎚', '🎛', '🎤', '🎧', '📻', '🎷', '🎸', '🎹', '🎺', '🎻', '🪕', '🥁', '📱', '📲', '☎', '📞', '📟', '📠', '🔋', '🔌', '💻', '🖥', '🖨', '⌨', '🖱', '🖲', '💽', '💾', '💿', '📀', '🧮', '🎥', '🎞', '📽', '🎬', '📺', '📷', '📸', '📹', '📼', '🔍', '🔎', '🕯', '💡', '🔦', '🏮', '🪔', '📔', '📕', '📖', '📗', '📘', '📙', '📚', '📓', '📒', '📃', '📜', '📄', '📰', '🗞', '📑', '🔖', '🏷', '💰', '💴', '💵', '💶', '💷', '💸', '💳', '🧾', '💹', '💱', '💲', '✉', '📧', '📨', '📩', '📤', '📥', '📦', '📫', '📪', '📬', '📭', '📮', '🗳', '✏', '✒', '🖋', '🖊', '🖌', '🖍', '📝', '💼', '📁', '📂', '🗂', '📅', '📆', '🗒', '🗓', '📇', '📈', '📉', '📊', '📋', '📌', '📍', '📎', '🖇', '📏', '📐', '✂', '🗃', '🗄', '🗑', '🔒', '🔓', '🔏', '🔐', '🔑', '🗝', '🔨', '🪓', '⛏', '⚒', '🛠', '🗡', '⚔', '🔫', '🏹', '🛡', '🔧', '🔩', '⚙', '🗜', '⚖', '🦯', '🔗', '⛓', '🧰', '🧲', '⚗', '🧪', '🧫', '🧬', '🔬', '🔭', '📡', '💉', '🩸', '💊', '🩹', '🩺', '🚪', '🛏', '🛋', '🪑', '🚽', '🚿', '🛁', '🪒', '🧴', '🧷', '🧹', '🧺', '🧻', '🧼', '🧽', '🧯', '🛒', '🚬', '⚰', '⚱', '🗿', '🏧', '🚮', '🚰', '♿', '🚹', '🚺', '🚻', '🚼', '🚾', '🛂', '🛃', '🛄', '🛅', '⚠', '🚸', '⛔', '🚫', '🚳', '🚭', '🚯', '🚱', '🚷', '📵', '🔞', '☢', '☣', '⬆', '↗', '➡', '↘', '⬇', '↙', '⬅', '↖', '↕', '↔', '↩', '↪', '⤴', '⤵', '🔃', '🔄', '🔙', '🔚', '🔛', '🔜', '🔝', '🛐', '⚛', '🕉', '✡', '☸', '☯', '✝', '☦', '☪', '☮', '🕎', '🔯', '♈', '♉', '♊', '♋', '♌', '♍', '♎', '♏', '♐', '♑', '♒', '♓', '⛎', '🔀', '🔁', '🔂', '▶', '⏩', '⏭', '⏯', '◀', '⏪', '⏮', '🔼', '⏫', '🔽', '⏬', '⏸', '⏹', '⏺', '⏏', '🎦', '🔅', '🔆', '📶', '📳', '📴', '♀', '♂', '⚕', '♾', '♻', '⚜', '🔱', '📛', '🔰', '⭕', '✅', '☑', '✔', '✖', '❌', '❎', '➕', '➖', '➗', '➰', '➿', '〽', '✳', '✴', '❇', '‼', '⁉', '❓', '❔', '❕', '❗', '〰', '©', '®', '™', '#️⃣', '*️⃣', '0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣', '9️⃣', '🔟', '🔠', '🔡', '🔢', '🔣', '🔤', '🅰', '🆎', '🅱', '🆑', '🆒', '🆓', 'ℹ', '🆔', 'Ⓜ', '🆕', '🆖', '🅾', '🆗', '🅿', '🆘', '🆙', '🆚', '🈁', '🈂', '🈷', '🈶', '🈯', '🉐', '🈹', '🈚', '🈲', '🉑', '🈸', '🈴', '🈳', '㊗', '㊙', '🈺', '🈵', '🔴', '🟠', '🟡', '🟢', '🔵', '🟣', '🟤', '⚫', '⚪', '🟥', '🟧', '🟨', '🟩', '🟦', '🟪', '🟫', '⬛', '⬜', '◼', '◻', '◾', '◽', '▪', '▫', '🔶', '🔷', '🔸', '🔹', '🔺', '🔻', '💠', '🔘', '🔳', '🔲', '🏁', '🚩', '🎌', '🏴', '🏳', '🏳️‍🌈', '🏴‍☠️', '🇦🇨', '🇦🇩', '🇦🇪', '🇦🇫', '🇦🇬', '🇦🇮', '🇦🇱', '🇦🇲', '🇦🇴', '🇦🇶', '🇦🇷', '🇦🇸', '🇦🇹', '🇦🇺', '🇦🇼', '🇦🇽', '🇦🇿', '🇧🇦', '🇧🇧', '🇧🇩', '🇧🇪', '🇧🇫', '🇧🇬', '🇧🇭', '🇧🇮', '🇧🇯', '🇧🇱', '🇧🇲', '🇧🇳', '🇧🇴', '🇧🇶', '🇧🇷', '🇧🇸', '🇧🇹', '🇧🇻', '🇧🇼', '🇧🇾', '🇧🇿', '🇨🇦', '🇨🇨', '🇨🇩', '🇨🇫', '🇨🇬', '🇨🇭', '🇨🇮', '🇨🇰', '🇨🇱', '🇨🇲', '🇨🇳', '🇨🇴', '🇨🇵', '🇨🇷', '🇨🇺', '🇨🇻', '🇨🇼', '🇨🇽', '🇨🇾', '🇨🇿', '🇩🇪', '🇩🇬', '🇩🇯', '🇩🇰', '🇩🇲', '🇩🇴', '🇩🇿', '🇪🇦', '🇪🇨', '🇪🇪', '🇪🇬', '🇪🇭', '🇪🇷', '🇪🇸', '🇪🇹', '🇪🇺', '🇫🇮', '🇫🇯', '🇫🇰', '🇫🇲', '🇫🇴', '🇫🇷', '🇬🇦', '🇬🇧', '🇬🇩', '🇬🇪', '🇬🇫', '🇬🇬', '🇬🇭', '🇬🇮', '🇬🇱', '🇬🇲', '🇬🇳', '🇬🇵', '🇬🇶', '🇬🇷', '🇬🇸', '🇬🇹', '🇬🇺', '🇬🇼', '🇬🇾', '🇭🇰', '🇭🇲', '🇭🇳', '🇭🇷', '🇭🇹', '🇭🇺', '🇮🇨', '🇮🇩', '🇮🇪', '🇮🇱', '🇮🇲', '🇮🇳', '🇮🇴', '🇮🇶', '🇮🇷', '🇮🇸', '🇮🇹', '🇯🇪', '🇯🇲', '🇯🇴', '🇯🇵', '🇰🇪', '🇰🇬', '🇰🇭', '🇰🇮', '🇰🇲', '🇰🇳', '🇰🇵', '🇰🇷', '🇰🇼', '🇰🇾', '🇰🇿', '🇱🇦', '🇱🇧', '🇱🇨', '🇱🇮', '🇱🇰', '🇱🇷', '🇱🇸', '🇱🇹', '🇱🇺', '🇱🇻', '🇱🇾', '🇲🇦', '🇲🇨', '🇲🇩', '🇲🇪', '🇲🇫', '🇲🇬', '🇲🇭', '🇲🇰', '🇲🇱', '🇲🇲', '🇲🇳', '🇲🇴', '🇲🇵', '🇲🇶', '🇲🇷', '🇲🇸', '🇲🇹', '🇲🇺', '🇲🇻', '🇲🇼', '🇲🇽', '🇲🇾', '🇲🇿', '🇳🇦', '🇳🇨', '🇳🇪', '🇳🇫', '🇳🇬', '🇳🇮', '🇳🇱', '🇳🇴', '🇳🇵', '🇳🇷', '🇳🇺', '🇳🇿', '🇴🇲', '🇵🇦', '🇵🇪', '🇵🇫', '🇵🇬', '🇵🇭', '🇵🇰', '🇵🇱', '🇵🇲', '🇵🇳', '🇵🇷', '🇵🇸', '🇵🇹', '🇵🇼', '🇵🇾', '🇶🇦', '🇷🇪', '🇷🇴', '🇷🇸', '🇷🇺', '🇷🇼', '🇸🇦', '🇸🇧', '🇸🇨', '🇸🇩', '🇸🇪', '🇸🇬', '🇸🇭', '🇸🇮', '🇸🇯', '🇸🇰', '🇸🇱', '🇸🇲', '🇸🇳', '🇸🇴', '🇸🇷', '🇸🇸', '🇸🇹', '🇸🇻', '🇸🇽', '🇸🇾', '🇸🇿', '🇹🇦', '🇹🇨', '🇹🇩', '🇹🇫', '🇹🇬', '🇹🇭', '🇹🇯', '🇹🇰', '🇹🇱', '🇹🇲', '🇹🇳', '🇹🇴', '🇹🇷', '🇹🇹', '🇹🇻', '🇹🇼', '🇹🇿', '🇺🇦', '🇺🇬', '🇺🇲', '🇺🇳', '🇺🇸', '🇺🇾', '🇺🇿', '🇻🇦', '🇻🇨', '🇻🇪', '🇻🇬', '🇻🇮', '🇻🇳', '🇻🇺', '🇼🇫', '🇼🇸', '🇽🇰', '🇾🇪', '🇾🇹', '🇿🇦', '🇿🇲', '🇿🇼', '🏴󠁧󠁢󠁥󠁮󠁧󠁿', '🏴󠁧󠁢󠁳󠁣󠁴󠁿', '🏴󠁧󠁢󠁷󠁬󠁳󠁿']
// http://www.geocities.co.jp/Technopolis/7365/nanasi.html
const NANASI_LIST = ['名無しさん＠お腹いっぱい。', 'うさぎ追いし名無しさん', '名刺は切らしておりまして', '名無しさん＠お腹いっぱい。', 'つまらないものですが名無しです', '名無しさん＠お腹いっぱい。', '名無しって何ですか？', 'ちょっと待て名無しが今何か言った',
  '名無しさん＠九周年', '名前をあたえないでください', 'なまえないよぉ～', '名無しさん＠恐縮です', 'やまとななしこ', 'オレオレ!オレだよ、名無しだよ!!', '名無しのひみつ', '名前を出せずごめんなさい', 'Ψ', '名無しさん＠平常通り', '読者の声', 'メディアみっくす☆名無しさん',
  '名前は開発中のものです', 'ただいま名無し変更議論中＠詳しくは自治スレへ', '私事ですが名無しです', '名無しさん＠お腹いっぱい。', '朝まで名無しさん', '日出づる処の名無し', 'バカは氏んでも名乗らない', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '<丶｀∀´>（´・ω・｀）（｀ハ´　 ）さん', '名無しさん＠お腹いっぱい。', '国連な成しさん', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '七つの海の名無しさん', 'maji', '名無しさん？', 'Classical名無しさん', 'ひよこ名無しさん',
  'ひよこ名無しさん', '登録商標774号さん', '水先案名無い人', '参加するカモさん', '名無しさん＠お腹いっぱい。', '※以下引用', '清き一票＠名無しさん', '動け動けウゴウゴ２ちゃんねる', '動け動けウゴウゴ２ちゃんねる', '野焼き ★', '名無しの報告', '名無しの良心', '迷ったら名乗らない', 'はじめまして名無しさん', 'ほんわか名無しさん', '夢見る名無しさん', 'エージェント・７７４', '名無しさん＠お腹いっぱい。', '名無しさん', '名無しさん＠├＼├＼廾□｀／',
  '（　´∀｀）さん', '<丶｀∀´>さん', '（　´∀）・∀）,,ﾟД)さん', '（*ﾟДﾟ）さん', '文責・名無しさん', '少年法により名無し', '名無しさんダーバード', '名無しさん＠レベル300', '名無しさん　～君の性差～', '無党派さん', '名無しさん＠お腹いっぱい。',
  '名無しピーポ君', '傍聴席＠名無しさんでいっぱい', '十二人の怒れる名無しさん', '名無しさんの主張', '名無電力１４００１', '川の名無しのように', '国道７７４号線', 'R774', '名無しさん＠お腹いっぱい。', '就職戦線異状名無しさん', '名無しさん＠引く手あまた', 'バリアフリーな名無しさん', 'ななしのフクちゃん',
  '名無しさん＠お腹いっぱい。', '専守防衛さん', '〒□□□-□□□□', '名無し生涯学習', '名無しさん', '名無しさん＠どっと混む', '名無しさん＠あたっかー', '名無しさん＠お腹いっぱい。', '名無し不動さん', '非公開＠個人情報保護のため', '無責任な名無しさん', '名無し検定１級さん',
  '名無しさん＠そうだ登録へいこう', 'もしもの為の名無しさん', '名無しさん＠そうだ確定申告に行こう', '一般に公正妥当と認められた名無しさん', '卵の名無しさん', '名無しさん＠お腹いっぱい。', '底値さん', '氏名トルツメ', 'FROM名無しさan', '名無しさん＠お腹いっぱい。',
  '名無しさん＠お腹いっぱい。', '（仮称）名無し邸新築工事', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しさん', '備えあれば憂い名無し', 'オレオレ！俺だよ！名無しだよ！', '名無しさん＠_＠', '名無しさん＠お腹いっぱい。', 'EXPO\'774',
  '名無しさん＠お腹いっぱい。', '名無し物書き＠推敲中？', '創る名無しに見る名無し', '名前はいらない', '名無しさん＠お腹いっぱい。', '名無シネマさん', '名無シネマ＠上映中', 'この子の名無しのお祝いに', '無名画座＠リバイバル上映中', '本当にあった怖い名無し',
  '名無しさん＠お腹いっぱい。', '名無しより愛をこめて', 'どこの誰かは知らないけれど', '名無しさん＠公演中', '名無しさん＠花束いっぱい。', 'マドモアゼル名無しさん', '名無しさん＠占い修業中', '名無しさん＠京都板じゃないよ', 'わたしはダリ？名無しさん？', '重要無名文化財', '名無し遺産', '名無しさん＠お腹いっぱい。', 'Nanashi_et_al.', 'ご冗談でしょう？名無しさん', '名無しゲノムのクローンさん', 'あるケミストさん', '名無しさん＠３周年', '774ワット発電中さん', 'メカ名無しさん', '非決定性名無しさん', '名無しさん＠お腹いっぱい。', '名無しさん＠５周年', '農NAME', '名無しＳＵＮ', '名無しさん＠おだいじに', '名無しさん＠お腹いっぱい。', '１３２人目の素数さん', '名無し組', '名も無きマテリアルさん', 'ＮＡＳＡしさん', 'オーバーテクナナシー', '名無虫さん', '同定不能さん', '没個性化されたレス↓', '名無し象は鼻がウナギだ！', '名無す', '名無しさん＠お腹いっぱい。',
  '名無しさん＠社会人', '名無しさん＠お腹いっぱい。', '吾輩は名無しである', '名無しさん＠お腹いっぱい。', '日本＠名無史さん', '名無しさん＠お腹いっぱい。', '世界＠名無史さん', '出土地不明', '天之御名無主', '名無氏物語', '名無しさん＠英語勉強中',
  '名無しさん＠お腹いっぱい。', 'マンセー名無しさん', '名無的発言者', '美麗島の名無桑', '名無しさん＠お腹いっぱい。', '名無しの歩き方＠お腹いっぱい。', '何語で名無しますか？', 'ФゝФ〕Иαηα∫н！∫αη', '考える名無しさん', '法の下の名無し', '氏名黙秘', '目のつけ所が名無しさん',
  '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しだって洗ってほしい', 'It\'s＠名無しさん', '非通知さん', '白ロムさん', 'iPhone774G', '携帯電話情報通知しません', '非通知さん＠アプリ起動中', '名無しさん＠３周年', '名無しさん脚', '名無CCDさん＠画素いっぱい', '名無しさん┃】【┃Dolby', '名無しさん＠お腹いっぱい。', '名無しさん＠３周年', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '金持ち名無しさん、貧乏名無しさん', '山師さん', '名無しさん＠お腹いっぱい。',
  '名無しさん＠お金いっぱい。', '山師さん＠トレード中', 'Trader＠Live!', '名無しさん＠大変な事がおきました', '名無しさん＠お腹いっぱい。', '革命的名無しさん', '右や左の名無し様', '名無しかましてよかですか？', '名無しさん', 'もぐもぐ名無しさん', '無銘菓さん', '内容量　774ml', '名無しさん＠( ･∀･)つ旦~', 'ぱくぱく名無しさん', '※', '大地の恵みの名無しさん', 'しいたけお', '隠し味さん', 'ラーメン大好き＠名無しさん', 'すぐ名無し、すごく名無し', '名無しさん＠お腹いっぱい。', '名無し＠ｱｶﾞﾘﾄﾞｿﾞｰ(ﾟ∀ﾟ)ﾉ旦', '名無しさん＠お腹いっぱい。', 'カレーなる名無しさん', '名無しさん＠お腹いっぱい。', 'オリーブ香る名無しさん', '名無しさん＠お腹いっぱい。', 'はふはふ名無しさん', 'ななしの珍味', '食いだおれさん', '一名でお待ちの名無し様', 'やめられない名無しさん', '名無しさん＠お腹いっぱい。', '呑んべぇさん', 'Appellation Nanashi Controlee', '名無しさん＠お腹いっぱい。', '困った時の名無しさん', '名無しさん＠お腹いっぱい。', 'ビタミン774mg', 'ななしのいるせいかつ', 'おさかなくわえた名無しさん', '今日のところは名無しで', '774号室の住人さん', '名無しの権兵衛さん', '名無しさん＠お腹いっぱい。', '名無しさん＠お大事に', '名無し会員さん', '｜男｜名無し湯｜女｜', '名無し記念日', '愛と死の名無しさん', '名無しの心子知らず', '名無しさん＠３周年', '名無しさん＠お腹いっぱい。', 'おかいものさん', '名無しさん＠お腹いっぱい。', 'まだまだ使える名無しさん', '名無しさん＠お腹いっぱい。',
  'この頃流行の名無しの子', '情報発信元：七七四通信社', '無名モデル', 'ノーブランドさん', '３枚セットで７７４円', '足元見られる名無しさん', 'メイク魂ななしさん', 'スリムななし(仮)さん', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しさん＠Before→After', '名無しさん＠お腹いっぱい。', '名無しさん', '名無しさん', '名無しさん＠ご利用は計画的に', '名無しさん＠お腹いっぱい。', '大人の名無しさん', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。',
  '名無しさん＠ＨＯＭＥ', '（名前は掃除されました）', '名無しさん＠お腹いっぱい。', '名前書くのももったいない', '懸賞ｽｷｽｷ名無しさん', '名無しは２０歳になってから', '-7.74Dさん', '名無しさん＠電話にはでんわ', 'いい気分さん', '安売り名無しさん', '＿ねん＿くみ　なまえ＿＿＿＿＿', '名無しさん＠お腹いっぱい。', '通常の名無しさんの３倍', '通常の名無しさんの３倍', '名無しちゃん…電波届いた？', '名無し職人', 'スペースNo.な-74', '名無しさん＠お腹いっぱい。', '以上、自作自演でした。', '名無しになりきれ', 'すてきななまえをつけてね。', '名無シサン＠ヲ腹イッパイ。', '恋する名無しさん', '恋人は名無しさん', '離婚さんいらっしゃい', '陽気な名無しさん', 'のほほん名無しさん', '名無しさん＠毎日が日曜日', '名無しさん＠お腹いっぱい。', '（-＿-）さん', '優しい名無しさん', '名無しさん＠お腹いっぱい。', 'Ms.名無しさん', 'Miss名無しさん', '彼氏いない歴774年', '可愛い奥様＠LR申請案公示中 自治スレ見てね', 'Mr.名無しさん', '(\'∀`)', '(\'A`)', '名前は誰も知らない', '名無しさん＠お腹いっぱい。', '名無しさん＠明日があるさ', '学生さんは名前がない', '学籍番号：774　氏名：＿＿＿＿＿', 'おたく、名無しさん？', '名無しさん＠３周年', '大人になった名無しさん', '名前がふっとんだ', '名無し→しりとり', '詠み人知らず', '名無番長', '鏡の向こうの名無しさん', '今、天王星のwiki見てきたら軌道傾斜角(i) が0.774°だった', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '実習生さん', '名無しなのに合格', '大学への名無しさん', '名無しさん＠お腹いっぱい。', '実名攻撃大好きＫＩＴＴＹ',
  '名無し専門学校', '作者不詳', 'nanasissimo', '受験番号774', '名無しの愉しみ', '芸も名前もありません', '名無しさん＠ジョーカーいっぱい', '□７×７＝４□□', '名無しさん＠お腹いっぱい。', 'ぼくらはトイ名無しキッズ', '名無し獣＠リアルに歩行', 'Cal.7743', '774mgさん', '名前なカッター(ノ∀｀)', 'もしもし、わたし名無しよ', '花咲か名無しさん', 'わんにゃん＠名無しさん', '名も無き飼い主さん', 'pH7.74', '名無しさん＠お腹いっぱい。', '：||‐ ～ さん', '黒ムツさん', '７７４ＲＲ',
  '名無しさん＠そうだドライブへ行こう', '阻止押さえられちゃいました', '名無しさん＠そうだドライブへ行こう', '名無しさん＠見た瞬間に即決した', '名無しさん＠お腹いっぱい。', '名無し三等兵', '名無しさんから2ch各局…', '名無しでGO!', '名無し野電車区', '回想774列車', '名無しの車窓から', '名無しさん＠線路いっぱい', '名74系統　名無し野車庫行', '名無しさん＠お腹いっぱい。',
  'HG名無しさん', '名無しさん＠電波いっぱい', '名無し迷彩', 'スターマイン774連', '無名武将＠お腹せっぷく', '名無しさん＠お腹いっぱい。', '人間七七四年', '名無しさん＠お腹いっぱい。', '踊る名無しさん', '名無しさん＠お腹いっぱい。', '名無しのコレクター', '(`･ω･´)ｼｬｼｰﾝ', 'スポーツ好きさん', 'アスリート名無しさん', '名無しする人この指とまれ', '７列７４番',
  'ゼッケン７７４さん＠ラストコール', 'ジム名無しストさん', '無記無記名', '運動神経名無しさん', '雪と氷の名無しさん', '名無しさん＠ゲレンデいっぱい。', '氷上の名無しさん＠実況厳禁', '第１のコース！名無しくん', '名無SEA', '名無しさん＠お腹いっぱい。', '高度774m', '名無し三平', '名無しバサー', 'ツール・ド・名無しさん', '白馬に乗った名無し様', '音速の名無しさん', 'クーベルタン男爵さん', '名無しの与一', '名無しさんが転んだ！', '名無しさん＠お腹いっぱい。',
  '名無しさん＠お腹いっぱい。', '名無し＠コソーリ練習', '代打名無し＠実況は野球ch板で', '無礼なことを言うな。たかが名無しが', '神様仏様名無し様', '名無しさん＠実況は実況板で', '名無しさん＠実況は実況板で', 'ナナシマさん', 'U-名無しさん＠実況はサッカーch',
  '名無しさん＠お腹いっぱい。', 'あ', 'バスケ大好き名無しさん', '名無しさん＠エースをねらえ！', '名無し＠チャチャチャ', '名無し for all, all for 名無し', '名無しＱ(･∀･)ﾉ゜ｻｧﾝ!!', '投球者：名無しさん', '名無野カントリー倶楽部', '名無しさん＠お腹いっぱい。', '競技人口 774人', '実況厳禁＠名無しの格闘家', 'お前名無しだろ', '名無しさん＠一本勝ち',
  '名無しさん名無しさん＠腹打て腹。', '待った名無しさん', '名無しさん＠お腹いっぱい。', '異邦人さん', '名無しさん＠お腹いっぱい。', '列島縦断名無しさん', '宿無しさん＠予約いっぱい', '名無しさん＠天国に一番近い島', '名無しさん＠いい湯だな', '名無しさん＠１２０分待ち',
  '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '底名無し沼さん', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しでいいとも！＠放送中は実況板で', '名無しだョ！全員集合', '名無しさんは見た！＠放送中は実況板で', '日曜8時の名無しさん', '名無しさん＠お腹いっぱい。', '名乗る程の者ではござらん', 'ラジオネーム名無しさん', 'P.N.名無し大好きっ子さん', '奥さまは名無しさん', '名無しさん＠お腹いっぱい。', 'てってーてき名無しさん',
  '名無しさん＠お腹いっぱい。', '名無しさんといっしょ', '提供：名無しさん', '通行人さん＠無名タレント', '魅せられた名無しさん', 'なんてったって名無しさん', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しさん', '名無しがお伝えします', 'どっちの名無しさん？', '名無しにして頂戴', 'ねぇ、名乗って', '名無しちゃんいい子なのにね', '無名アイドルくん',
  'ファンクラブ会員番号７７４', '名無しさん＠お腹いっぱい。', 'ななしじゃにー', 'スマ姐さん', 'ユー＆名無しネ', 'ユーは名無しネ', '焼き鳥名無しさん', 'ヽ(´∀｀≡´∀｀)ノ７７７７さん', '名無しさん＠お腹いっぱい。', '名無し変更議論中＠自治スレにて', '(　´∀｀)ノ７７７７さん',
  '「名無しわざとか？」とかイヤミを言われた', '名無しさん＠お腹いっぱい。', '名無しさん＠実況で競馬板アウト', 'こんな名無しでは、どうしようもないよ。', '名無しさん＠お腹いっぱい。', '怒るでななし', '＿期　選手名＿＿＿＿呼名＿＿＿＿', '三連単７－４－３', '名無しさん＠夢いっぱい',
  'ゲーム好き名無しさん', '名無しさん＠非公式ガイド', '名無しさん＠お腹いっぱい。', '大丈夫！名無しさんの攻略法だよ。', '名無しさん＠お腹いっぱい。', '名前が無い＠ただの名無しのようだ', '助けて！名無しさん！', 'それも名無しだ', '名無しくん、、、好きです。。。', 'いけない名無しさん',
  '名無しって呼んでいいか？', '名無しさん＠お腹いっぱい。', '名無し曰く、', '爆音で名前が聞こえません', '俺より強い名無しに会いにいく', '名無しさん＠弾いっぱい', 'UnnamedPlayer', '大空の名無しさん', 'なまえをいれてください', '名無しさん＠お腹いっぱい。', 'ＮＡＭＥ　ＯＶＥＲ',
  '名無しの挑戦状', 'せがた七四郎', 'ゲームセンター名無し', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', '名無しさんの野望', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', 'ＮＰＣさん', '名無しプレイヤー＠手札いっぱい。',
  '名無し名人', '名無し名人', '（　･∀･）つ〃∩ﾍｪｰﾍｪｰﾍｪｰ', '名無しさん必死だな', '名無しさん＠お腹いっぱい。', '名無したんはエロカワイイ', 'SOUND TEST ：774', '枯れた名無しの水平思考', '名無しさん＠お腹いっぱい。', '名無しじゃなきゃダメなのぉ！', '名無しさん、君に決めた！',
  'こくないのだれか', 'ＮＡＭＥ　ＢＯＹ', '名無しさん＠お腹いっぱい。', '名無し＠お前ら落ち着け', '名も無き求道者', '既にその名前は使われています', 'ヽ(｀Д´)ﾉ　ｳﾜｧｧｧﾝ', '名無しオンライン', 'ネトゲ廃人＠名無し', '名も無き冒険者', '名も無き冒険者', '名無しさん＠いつかは大規模', '無未来', '名無しさん＠お腹いっぱい。', '風の谷の名無しさん＠実況は実況板で', '名無しさん＠お腹いっぱい。', 'ななし製作委員会',
  '名無しか・・・何もかも皆懐かしい', '名無しさん＠お腹いっぱい。', '見ろ！名無しがゴミのようだ！', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', 'Ｃ．Ｎ．：名無したん', '声の出演：名無しさん', '名無しさん＠お腹いっぱい。', '更新', 'カタログ片手に名無しさん', 'マロン名無しさん', '名無しんぼ＠お腹いっぱい', '愛蔵版名無しさん', '作者の都合により名無しです', '名無しさんの次レスにご期待下さい', '花と名無しさん', '□□□□(ネーム無し)', '名無しかわいいよ名無し', 'CC名無したん', '名無しが氏んでも代わりはいるもの', '名無しさん＠お腹いっぱい。', '名無しさん名無しさん', 'この名無しがすごい！', 'イラストに騙された名無しさん', '名無しのオプ', '名無しは無慈悲な夜の女王', '匿名希望さん', '無名草子さん', 'さく・え／ななし', 'なまえ＿＿＿＿＿かえす日', '名無しさん＠お腹いっぱい。', '名無しの歌が聞こえてくるよ♪',
  'Track No.774', '名無しのエリー', 'NO MUSIC NO NAME', '名無しの歌姫', '名無しさん＠お腹いっぱい。', '昔の名無しで出ています', '男です女です名無しです', '名無しさん＠お腹いっぱい。', '名盤さん', 'ベストヒット名無しさん',
  '名も無き音楽論客', 'ホワイトアルバムさん', 'Nana', '整理番号774', '名無しチェケラッチョ♪', 'サタデー名無しフィーバー', '名無しさん＠ソウルいっぱい。', 'NO-FUTUREさん', '名無しさんのみボーナストラック収録', '訴える名無しさん。', 'TR-774', '名無しがここにいてほしい', '名無しさん＠お腹いっぱい。', '名無し音楽放浪の旅', '名無しさん＠お腹いっぱい。',
  'いつか名無しさんが', '名無しさん＠お腹いっぱい。', '名無しの笛の踊り', '7分74秒', '名無しさん＠お腹いっぱい。', '名無し行進曲', '名無し讃頌', '名無しさん＠お腹いっぱい。', 'ななしいさお＠オマエモナゆりかご会', '名無しのテーマ',
  '選曲してください', '伝説の名無しさん', '無名さん', '当方名無し、全パート募集中', 'ドレミファ名無シド', 'ギコ踏んじゃった', '癒されたい名無しさん', 'マジレスさん', '神も仏も名無しさん', '病弱名無しさん', '名無しさん＠お腹いっぱい。', 'がんと闘う名無しさん', '名無しさん＠お腹いっぱい。', '名無しさん＠まいぺ～す', '名前アレルギー', '毛無しさん', '名無しさんの初恋', '名無しさんといつまでも一緒', '禁断の名無しさん', '優しい名無しさん', '名無しさん',
  'まちがって名前消しちゃいました。', '名無し~3.EXE', '●~*', '名称未設定', 'Be名無しさん', '名無しさん＠アイコンいっぱい。', '名無しさん', '[Fn]＋[名無しさん]', 'Socket774', '名無しさん＠お腹いっぱい。', '不明なデバイスさん', '名無しさん◎書き込み中', '名無しさん＠お腹いっぱい。', 'いつでもどこでも名無しさん', '名無しさん＠そうだ選挙にいこう', '名無しさん＠お腹いっぱい。', 'NAME IS NULL', 'login:Penguin', '仕様書無しさん', 'デフォルトの名無しさん', '名無しさん＠お腹いっぱい。', '名無しサンプリング＠48kHz', '名無しさん＠編集中', 'Now_loading...774KB', '名前は開発中のものです。', 'ナイコンさん', '192.168.0.774', '[名無し]さん(bin+cue).rar', 'Name_Not_Found', 'クリックで救われる名無しさんがいる', '名無しさん＠お腹いっぱい。', 'DNS未登録さん', 'nobodyさん', '名無しさん＠いたづらはいやづら', '名無しさん＠お腹いっぱい。', 'anonymous', '名無しさん＠お腹いっぱい。', '名無しさん＠おひさまのよう。', '名無しさんに接続中…', '774円/60分', '名無しさん@GOBANDB', '名無しさん＠そうだ選挙にいこう', '名無し草', '名無しさんが今一番おすすめのサイト', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', 'もすもす名無しですが', '名無しさん＠お腹いっぱい。', '名無しさん＠お腹いっぱい。', 'Trackback(774)', '友達の友達の名無しさん', '名無しさん＠ｺﾞｰｺﾞｰｺﾞｰｺﾞｰ！', '名無しさん（新規）', '名無しということにしたいのですね', 'おいら名無しさんヽ(´ー｀)ノ', '名無しさん', '●', '名無し戦隊ナノレンジャー！', '日本昔名無し', '名無しさん', '最低人類０号', 'エリート街道さん', 'ナナシズム', '名無しさん＠お腹いっぱい。', '心得をよく読みましょう', '名無し募集中。。。', '格無しさん', '名無しさん＠お腹いっぱい。', 'いやあ名無しってほんとにいいもんですね', '以下、名無しにかわりましてVIPがお送りします', 'ローカルルール変更議論中＠VIP+', '番組の途中ですがアフィ禁止です', '田中', '名前書いたら負けかなと思っている。', 'ウホッ！いい名無し…', '心得をよく読みましょう', '名無しさん＠ピンキー', 'おしえて！エロいひと', '名無し＠メアド公開チャット誘導厳禁', '名無しさん＠ピンキー', 'えっちな18禁さん', 'ほのぼのえっちさん', 'fusｉanasan', '名無しさん＠ピンキー', '名無しさん＠ビンキー', '名無し編集部員', '名無しさん＠ピンキー', '名無しさん', '名無しさん＠ピンキー', '名無したちの午後', '名無しさん＠ピンキー', '名無しさん＠初回限定', '名無しさんだよもん', '名無しさん＠ピンキー', '確認 ： あなたは21歳以上の名無しですか？', '名無しさん＠ピンキー', '名無しさん＠ピンキー', 'ベッドの下の名無しさん', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '最後尾の名無しさん＠３日目', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '名無しさん＠ピンキー', 'なまえを挿れて。', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '南極774号', '名無しさん＠ピンキー', '名無し調教中。', '名無しさん＠ピンキー', '名無しさん＠ピンキー', 'ストップ！！名無しくん！', '薔薇と百合の名無しさん', '名無しさん＠ローカルルール変更議論中', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '風と木の名無しさん', '...φ(・ω・`c⌒っ', '名無しさん＠ピンキー', '/名無しさん[1-30].jpg', 'ローカルルール・その他変更議論中@自治スレ', '名無しかな？', '萌える名無し画像', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '名無しさんと大人の出会い', '名無しさん＠ピンキー', '名無しさん＠ピンキー', '名無しさん＠入浴中', '名無し＠18歳未満の入場禁止', '名無しさん＠ピンキー', '名無し＠18歳未満の入場禁止']
const MESSAGE_QUERY_LIMIT = 20
const app = new Vue({
  el: '#app',
  data: {
    user: null,
    db: {},
    accessCount: 0,
    message: '',
    messageList: [],
    oldMessageList: [],
    loadOldMessageListDisabled: false,
    messageListLoaded: false,
    messageListIsEmpty: true,
    uploadedImageUrl: '',
    uploadedImageFullPath: '',
    selectedEmoji: '',
    lastMessage: null,
    dishId: null,
    dish: null,
    dishLoaded: false,
    notifications: [],
    notificationsTimer: null,
    emojiListVisible: false
  },
  computed: {
    isAuthenticated: function() {
      if (this.user && this.user.uid) {
        return true
      } else {
        return false
      }
    },
    dishDocumentRef: function() {
      if (!this.dishId) return
      return db.doc(`/dishes/${this.dishId}`)
    },
    messagesCollectionRef: function() {
      if (!this.dishId) return
      return db.collection(`/dishes/${this.dishId}/messages`)
    },
    emojiList: function() {
      return EMOJI_LIST
    }
  },
  methods: {
    nameColor: function(uid, timestamp) {
      const seed = this.textToNumber(uid + this.timestampFormat(timestamp, 'YYYYMMDD'))
      const rand = new Random(seed)
      const no = rand.nextInt(0, NAME_COLOR_LIST.length)
      return { color: NAME_COLOR_LIST[no - 1] }
    },
    nanasiName: function(uid, timestamp) {
      const seed = this.textToNumber(uid + this.timestampFormat(timestamp, 'YYYYMMDD'))
      const rand = new Random(seed)
      const no = rand.nextInt(0, NANASI_LIST.length)
      return NANASI_LIST[no - 1]
    },
    insertToMessage: function(char) {
      this.message += char
    },
    isNew: function(timestamp) {
      if (!timestamp) return false
      if (new Date().getTime() - timestamp.toDate().getTime() < 600 * 1000) {
        return true
      } else {
        return false
      }
    },
    textToNumber: function(text) {
      let result = 0
      text.split('').map((s, index) => {
        result += s.charCodeAt(0) * (index || 1)
      })
      return result
    },
    showNotification: function(message, type) {
      this.notifications.push({ type: type, message: message })
      setTimeout(() => {
        this.notifications.shift()
      }, 3000)
    },
    signInGoogle: function() {
      firebase.auth().signInWithRedirect(new firebase.auth.GoogleAuthProvider())
    },
    signInTwitter: function() {
      firebase.auth().signInWithRedirect(new firebase.auth.TwitterAuthProvider())
    },
    signOut: function() {
      firebase
        .auth()
        .signOut()
        .then(() => {
          this.showNotification('ログアウトしました', 'success')
        })
        .catch(error => {
          console.error(error)
        })
    },
    timestampFormat: function(timestamp, format) {
      if (!timestamp) {
        return
      }
      if (typeof timestamp.toDate !== 'function') {
        console.error('timestamp is invalid')
        return
      }
      const date = timestamp.toDate()
      if (!format) {
        format = 'YYYY-MM-DD hh:mm:ss.SSS';
      }
      format = format.replace(/YYYY/g, date.getFullYear())
        .replace(/MM/g, ('0' + (date.getMonth() + 1)).slice(-2))
        .replace(/DD/g, ('0' + date.getDate()).slice(-2))
        .replace(/hh/g, ('0' + date.getHours()).slice(-2))
        .replace(/mm/g, ('0' + date.getMinutes()).slice(-2))
        .replace(/ss/g, ('0' + date.getSeconds()).slice(-2))
      if (format.match(/S/g)) {
        const milliSeconds = ('00' + date.getMilliseconds()).slice(-3)
        const length = format.match(/S/g).length
        for (let i = 0; i < length; i++) {
          format = format.replace(/S/, milliSeconds.substring(i, i + 1))
        }

      }
      return format
    },
    createCounter: function() {
      const num_shards = 3
      const ref = db.collection('counter').doc('access')
      const batch = db.batch();

      // Initialize the counter document
      batch.set(ref, { 'num_shards': num_shards });

      // Initialize each shard with count=0
      for (let i = 0; i < num_shards; i++) {
        let shardRef = ref.collection('shards').doc(i.toString());
        batch.set(shardRef, { count: 0 });
      }

      // Commit the write batch
      return batch.commit();
    },
    incrementCounter: function(db, ref, num_shards) {
      // Select a shard of the counter at random
      const shard_id = Math.floor(Math.random() * num_shards).toString();
      const shard_ref = ref.collection('shards').doc(shard_id);

      // Update count in a transaction
      return db.runTransaction(t => {
        return t.get(shard_ref).then(doc => {
          const new_count = doc.data().count + 1;
          t.update(shard_ref, { count: new_count });
        });
      });
    },
    setCount: function(ref) {
      // Sum the count of each shard in the subcollection
      return ref.collection('shards').onSnapshot((querySnapshot) => {
        let count = 0
        querySnapshot.forEach(doc => {
          count += doc.data().count
        })
        this.accessCount = count
      })
    },
    addMessage: async function() {
      if (!this.isAuthenticated) {
        console.log('not authenticated, addOmikujiLog skipped')
        return
      }
      if (this.message.length == 0 && !this.uploadedImageFullPath) {
        this.showNotification('メッセージか画像をいれてね', 'error')
        return
      }
      if (this.message.length > 1024) {
        this.showNotification('メッセージが長すぎだよ', 'error')
        return
      }
      this.emojiListVisible = false
      const messageData = {
        content: this.message,
        timestamp: firebase.firestore.FieldValue.serverTimestamp(),
        uid: this.user.uid,
        displayName: this.user.displayName
      }
      if (this.uploadedImageFullPath) {
        messageData['imagePath'] = this.uploadedImageFullPath
        messageData['imageUrl'] = await this.getImageUrl(this.uploadedImageFullPath)
      }
      return this.messagesCollectionRef
        .add(messageData)
        .then(result => {
          this.message = ''
          this.resetUploadedImage()
        }).catch(error => {
          console.error(error)
          this.showNotification('メッセージの書き込みに失敗しました' + error, 'error')
        })
    },
    getMessageListOnSnapshot: function(callback) {
      if (!this.isAuthenticated) {
        console.error('!isAuthenticated')
        return
      }
      let query = this.messagesCollectionRef
        .limit(MESSAGE_QUERY_LIMIT)
        .orderBy('timestamp', 'desc')
      return query.onSnapshot(callback)
    },
    loadOldMessageList: async function() {
      if (!this.isAuthenticated) {
        return
      }
      let query = this.messagesCollectionRef
        .limit(MESSAGE_QUERY_LIMIT)
        .orderBy('timestamp', 'desc')
      if (this.lastMessage) {
        query = query.startAfter(this.lastMessage)
      }
      const messages = await query.get()
      messages.docs.forEach(doc => {
        this.oldMessageList.unshift({
          id: doc.id,
          data: doc.data()
        })
      })
      if (messages.docs.length) {
        this.lastMessage = messages.docs[messages.docs.length - 1]
      } else {
        this.showNotification('もうないよ', 'error')
        this.loadOldMessageListDisabled = true
      }
    },
    updateMessageList: async function(snapshot) {
      this.messageListLoaded = true
      this.messageListIsEmpty = snapshot.empty
      if (snapshot.empty) {
        console.error('empty')
        return
      }
      this.messageList = []
      snapshot.docs.forEach(doc => {
        this.messageList.unshift({
          id: doc.id,
          data: doc.data()
        })
      })
      if (!this.lastMessage && snapshot.docs.length) {
        this.lastMessage = snapshot.docs[snapshot.docs.length - 1]
      }
      this.scrollToBottom()
    },
    scrollToBottom: function() {
      this.$nextTick(() => {
        window.scrollTo(0, document.querySelector('#message-ul li:last-child').offsetTop)
      })
    },
    counter: function() {
      // this.createCounter()
      const counterRef = db.collection('counter').doc('access')
      this.incrementCounter(db, counterRef, 3).then(() => {
        this.setCount(counterRef)
      })
    },
    getDishDocument: async function() {
      if (!this.dishDocumentRef) return
      const dish = await this.dishDocumentRef.get()
      this.dishLoaded = true
      if (dish.exists) {
        this.dish = dish.data()
        this.$emit('dish-loaded')
      } else {
        this.showNotification('お皿がみつかりません', 'error')
      }
    },
    loadDish: function() {
      const pathname = window.location.pathname.slice(1)
      if (!pathname) {
        console.log('pathnameの取得に失敗しました')
        return
      }
      const result = window.location.pathname.match(/\/\~([a-z0-9]+)/i)
      if (result[1]) {
        this.dishId = result[1]
      } else {
        console.log('dishId is null')
      }
    },
    getImageUrl: async function(fullpath) {
      const url = await storageRef.child(fullpath).getDownloadURL()
      return url
    },
    uploadImageRef: function(ext) {
      if (this.user && this.user.uid) {
        const uuid = uuidv4()
        return storageRef.child(`images/${this.user.uid}/${uuid}.${ext}`)
      } else {
        return
      }
    },
    uploadImage: function(event) {
      if (!event.target.files.length) return
      const file = event.target.files[0]
      if (!file) {
        console.log('file not found')
        return
      }
      const ext = file.name.match(/\.([a-zA-Z0-9]{3,4})$/)[1]
      if (!ext) {
        console.log('ext not found')
        return
      }
      const ref = this.uploadImageRef(ext)ｔ
      ref.put(file).then(async (snapshot) => {
        console.log(snapshot)
        this.uploadedImageFullPath = snapshot.metadata.fullPath
        this.uploadedImageUrl = await this.getImageUrl(snapshot.metadata.fullPath)
        this.showNotification('アップロードに成功しました', 'sucess')
      })
    },
    resetUploadedImage: function() {
      this.uploadedImageFullPath = ''
      this.uploadedImageUrl = ''
      this.$refs.imgFile.value = ''
    },
    deleteUploadedImage: function() {
      const ref = storageRef.child(this.uploadedImageFullPath)
      ref.delete()
        .then(() => {
          console.log('削除成功')
          this.resetUploadedImage()
        })
        .catch(() => {
          this.showNotification('削除に失敗しました', 'error')
        })
    },
    init: function() {
      this.getDishDocument()
      this.counter()
    }
  },
  created: function() {
    this.loadDish()
    this.$on('firebase-signedin', () => {
      this.init()
    })
    this.$on('dish-loaded', () => {
      this.getMessageListOnSnapshot(this.updateMessageList)
    })
  }
})

firebase
  .auth()
  .getRedirectResult()
  .then(function(result) {
    if (result.credential) {
      console.log('ログインしました：' + result.user.email, 'success')
    }
  })
  .catch(function(error) {
    console.log('ログインに失敗しました：' + error.message, 'error')
  })

firebase
  .auth()
  .onAuthStateChanged(user => {
    app.user = user
    if (user) {
      app.$emit('firebase-signedin')
    }
  })